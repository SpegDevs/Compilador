int -> INT
x -> IDENTIFIER
; -> SEMICOLON
int -> INT
y -> IDENTIFIER
; -> SEMICOLON
int -> INT
z -> IDENTIFIER
; -> SEMICOLON
x -> IDENTIFIER
= -> EQUAL
1 -> INTEGER
; -> SEMICOLON
y -> IDENTIFIER
= -> EQUAL
0 -> INTEGER
; -> SEMICOLON
for -> FOR
( -> L_PARENTHESIS
x -> IDENTIFIER
= -> EQUAL
3 -> INTEGER
; -> SEMICOLON
x -> IDENTIFIER
< -> LESS_THAN
7 -> INTEGER
; -> SEMICOLON
x -> IDENTIFIER
= -> EQUAL
x -> IDENTIFIER
+ -> PLUS
1 -> INTEGER
) -> R_PARENTHESIS
{ -> L_BRACE
y -> IDENTIFIER
= -> EQUAL
y -> IDENTIFIER
+ -> PLUS
x -> IDENTIFIER
; -> SEMICOLON
} -> R_BRACE
