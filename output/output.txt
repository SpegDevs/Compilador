arr -> ARRAY
[ -> L_BRACKET
int -> INT
, -> COLON
5 -> INTEGER
] -> R_BRACKET
a -> IDENTIFIER
; -> SEMICOLON
int -> INT
i -> IDENTIFIER
; -> SEMICOLON
int -> INT
x -> IDENTIFIER
; -> SEMICOLON
a -> IDENTIFIER
[ -> L_BRACKET
0 -> INTEGER
] -> R_BRACKET
= -> EQUAL
5 -> INTEGER
; -> SEMICOLON
a -> IDENTIFIER
[ -> L_BRACKET
1 -> INTEGER
] -> R_BRACKET
= -> EQUAL
3 -> INTEGER
; -> SEMICOLON
a -> IDENTIFIER
[ -> L_BRACKET
2 -> INTEGER
] -> R_BRACKET
= -> EQUAL
- -> MINUS
4 -> INTEGER
; -> SEMICOLON
a -> IDENTIFIER
[ -> L_BRACKET
3 -> INTEGER
] -> R_BRACKET
= -> EQUAL
9 -> INTEGER
; -> SEMICOLON
a -> IDENTIFIER
[ -> L_BRACKET
4 -> INTEGER
] -> R_BRACKET
= -> EQUAL
1 -> INTEGER
; -> SEMICOLON
x -> IDENTIFIER
= -> EQUAL
1 -> INTEGER
; -> SEMICOLON
for -> FOR
( -> L_PARENTHESIS
i -> IDENTIFIER
= -> EQUAL
0 -> INTEGER
; -> SEMICOLON
i -> IDENTIFIER
< -> LESS_THAN
5 -> INTEGER
; -> SEMICOLON
i -> IDENTIFIER
= -> EQUAL
i -> IDENTIFIER
+ -> PLUS
1 -> INTEGER
) -> R_PARENTHESIS
{ -> L_BRACE
x -> IDENTIFIER
= -> EQUAL
x -> IDENTIFIER
* -> MULTIPLICATION
a -> IDENTIFIER
[ -> L_BRACKET
i -> IDENTIFIER
] -> R_BRACKET
; -> SEMICOLON
} -> R_BRACE
